{"ast":null,"code":"var _jsxFileName = \"/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/modulo05/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './style';\nimport api from '../../services/api';\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      this.setState({\n        newRepo: e.target.value,\n        error: null\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true,\n        error: false\n      });\n\n      try {\n        const {\n          newRepo,\n          repositories\n        } = this.state;\n        const response = await api.get(`/repos/${newRepo}`);\n        const data = {\n          name: response.data.full_name\n        };\n        this.setState({\n          repositories: [...repositories, data],\n          newRepo: '',\n          loading: false\n        });\n      } catch (error) {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false,\n      error: null\n    };\n  } // carregar os dados do localstorage\n\n\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({\n        repositories: JSON.parse(repositories)\n      });\n    }\n  } // salvar dados do localstorage\n\n\n  componentDidUpdate(_, prevState) {\n    const {\n      repositories\n    } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  render() {\n    const {\n      newRepo,\n      loading,\n      repositories\n    } = this.state;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(FaGithubAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \"Reposit\\xF3rios\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Adicionar reposit\\xF3rio\",\n      value: newRepo,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, loading ? React.createElement(FaSpinner, {\n      color: \"#fff\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }) : React.createElement(FaPlus, {\n      color: \"#fff\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, repositories.map(repository => React.createElement(\"li\", {\n      key: repository.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, repository.name), React.createElement(Link, {\n      to: `/repository/${encodeURIComponent(repository.name)}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Detalhes\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/modulo05/src/pages/Main/index.js"],"names":["React","Component","FaGithubAlt","FaPlus","FaSpinner","Link","Container","Form","SubmitButton","List","api","Main","constructor","props","handleInputChange","e","setState","newRepo","target","value","error","handleSubmit","preventDefault","loading","repositories","state","response","get","data","name","full_name","bind","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","render","map","repository","encodeURIComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,SAA9B,QAA+C,gBAA/C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,IAA7B,QAAyC,SAAzC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,eAAe,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAC1CW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA8BnBC,iBA9BmB,GA8BCC,CAAC,IAAI;AACvB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASC,KAApB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAAd;AACD,KAhCkB;;AAAA,SAkCnBC,YAlCmB,GAkCJ,MAAMN,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACO,cAAF;AAEA,WAAKN,QAAL,CAAc;AAAEO,QAAAA,OAAO,EAAE,IAAX;AAAiBH,QAAAA,KAAK,EAAE;AAAxB,OAAd;;AAEA,UAAI;AACF,cAAM;AAAEH,UAAAA,OAAF;AAAWO,UAAAA;AAAX,YAA4B,KAAKC,KAAvC;AACA,cAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAJ,CAAS,UAASV,OAAQ,EAA1B,CAAvB;AAEA,cAAMW,IAAI,GAAG;AACXC,UAAAA,IAAI,EAAEH,QAAQ,CAACE,IAAT,CAAcE;AADT,SAAb;AAIA,aAAKd,QAAL,CAAc;AACZQ,UAAAA,YAAY,EAAE,CAAC,GAAGA,YAAJ,EAAkBI,IAAlB,CADF;AAEZX,UAAAA,OAAO,EAAE,EAFG;AAGZM,UAAAA,OAAO,EAAE;AAHG,SAAd;AAKD,OAbD,CAaE,OAAOH,KAAP,EAAc,CAEf;AACF,KAvDkB;;AAEjB,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBU,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKjB,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBiB,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKN,KAAL,GAAa;AACXR,MAAAA,OAAO,EAAE,EADE;AAEXO,MAAAA,YAAY,EAAE,EAFH;AAGXD,MAAAA,OAAO,EAAE,KAHE;AAIXH,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD,GAXyC,CAa1C;;;AACAY,EAAAA,iBAAiB,GAAG;AAClB,UAAMR,YAAY,GAAGS,YAAY,CAACC,OAAb,CAAqB,cAArB,CAArB;;AAEA,QAAIV,YAAJ,EAAkB;AAChB,WAAKR,QAAL,CAAc;AAAEQ,QAAAA,YAAY,EAAEW,IAAI,CAACC,KAAL,CAAWZ,YAAX;AAAhB,OAAd;AACD;AACF,GApByC,CAsB1C;;;AACAa,EAAAA,kBAAkB,CAACC,CAAD,EAAIC,SAAJ,EAAe;AAC/B,UAAM;AAAEf,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;;AAEA,QAAIc,SAAS,CAACf,YAAV,KAA2BA,YAA/B,EAA6C;AAC3CS,MAAAA,YAAY,CAACO,OAAb,CAAqB,cAArB,EAAqCL,IAAI,CAACM,SAAL,CAAejB,YAAf,CAArC;AACD;AACF;;AA6BDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEzB,MAAAA,OAAF;AAAWM,MAAAA,OAAX;AAAoBC,MAAAA;AAApB,QAAqC,KAAKC,KAAhD;AACA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,oBADF,EAME,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKJ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,0BAFd;AAGE,MAAA,KAAK,EAAEJ,OAHT;AAIE,MAAA,QAAQ,EAAE,KAAKH,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAES,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OAAO,GACN,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAwB,MAAA,IAAI,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,GAGN,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,IAAI,EAAE,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAPF,CANF,EAsBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,YAAY,CAACmB,GAAb,CAAiBC,UAAU,IAC1B;AAAI,MAAA,GAAG,EAAEA,UAAU,CAACf,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOe,UAAU,CAACf,IAAlB,CADF,EAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,eAAcgB,kBAAkB,CAACD,UAAU,CAACf,IAAZ,CAAkB,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADD,CADH,CAtBF,CADF;AAmCD;;AA/FyC","sourcesContent":["import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './style';\nimport api from '../../services/api';\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false,\n      error: null,\n    };\n  }\n\n  // carregar os dados do localstorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({ repositories: JSON.parse(repositories) });\n    }\n  }\n\n  // salvar dados do localstorage\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({ newRepo: e.target.value, error: null });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    this.setState({ loading: true, error: false });\n\n    try {\n      const { newRepo, repositories } = this.state;\n      const response = await api.get(`/repos/${newRepo}`);\n\n      const data = {\n        name: response.data.full_name,\n      };\n\n      this.setState({\n        repositories: [...repositories, data],\n        newRepo: '',\n        loading: false,\n      });\n    } catch (error) {\n\n    }\n  };\n\n  render() {\n    const { newRepo, loading, repositories } = this.state;\n    return (\n      <Container>\n        <h1>\n          <FaGithubAlt />\n          Repositórios\n        </h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Adicionar repositório\"\n            value={newRepo}\n            onChange={this.handleInputChange}\n          />\n          <SubmitButton loading={loading}>\n            {loading ? (\n              <FaSpinner color=\"#fff\" size={14} />\n            ) : (\n              <FaPlus color=\"#fff\" size={14} />\n            )}\n          </SubmitButton>\n        </Form>\n\n        <List>\n          {repositories.map(repository => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n                Detalhes\n              </Link>\n            </li>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}